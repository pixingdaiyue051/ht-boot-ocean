server:
  port: 8511
  servlet:
    context-path: /
logging:
  config: classpath:logback-dev.xml
##自定义配置
jdbc:
  driverClassName: com.mysql.cj.jdbc.Driver
  url: jdbc:mysql://127.0.0.1/local_demo?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
  username: root
  password: root
  # 连接池的配置信息
  # 初始化大小，最小，最大
  initialSize: 2
  minIdle: 2
  maxActive: 10
  # 配置获取连接等待超时的时间
  maxWait: 60000
  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  timeBetweenEvictionRunsMillis: 60000
  # 配置一个连接在池中最小生存的时间，单位是毫秒
  minEvictableIdleTimeMillis: 300000
mybatisConfigLocation: mybatis-config-dev.xml

# 驱动配置信息
#spring:
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    url = jdbc:mysql://127.0.0.1:3306/myspringboot
#    username = root
#    password = 123456
#    driverClassName = com.mysql.jdbc.Driver
#
#  # 连接池的配置信息
#  #  初始化大小，最小，最大
#  spring.datasource.initialSize=5
#  spring.datasource.minIdle=5
#  spring.datasource.maxActive=20
#  # 配置获取连接等待超时的时间
#  spring.datasource.maxWait=60000
#  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#  spring.datasource.timeBetweenEvictionRunsMillis=60000
#  # 配置一个连接在池中最小生存的时间，单位是毫秒
#  spring.datasource.minEvictableIdleTimeMillis=300000
#  spring.datasource.validationQuery=SELECT 1 FROM DUAL
#  spring.datasource.testWhileIdle=true
#  spring.datasource.testOnBorrow=false
#  spring.datasource.testOnReturn=false
#  # 打开PSCache，并且指定每个连接上PSCache的大小
#  spring.datasource.poolPreparedStatements=true
#  spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#  spring.datasource.filters=stat,wall,log4j
#  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#  spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000